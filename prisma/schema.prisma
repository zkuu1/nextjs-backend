generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id        String   @id @default(uuid())
  name      String
  userId    String
  banners Banner[] @relation("StoreTobanner")
  categories Category[] @relation("StoreToCategory")
  products  Product[] @relation("StoreToProduct")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Banner {
  id      String  @id @default(uuid())
  storeId String
  store   Store @relation("StoreTobanner", fields: [storeId], references: [id])
  Categories Category[]
  label   String
  description String
  imageUrl  String
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("StoreToCategory", fields: [storeId], references: [id])
  bannerId String
  banner    Banner   @relation(fields: [bannerId], references: [id])
  products  Product[] @relation("CategoryToProduct")
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index ([storeId])
  @@index ([bannerId])
}

model Product {
  id        String   @id @default(uuid())
  storeId   String
  store     Store    @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId String
  category   Category @relation("CategoryToProduct",fields: [categoryId], references: [id])

  name      String
  price     Decimal
  description String
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  images Images[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index ([storeId])
  @@index ([categoryId])
}

model Images {
  id        String   @id @default(uuid())
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  url  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index ([productId])
}